;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; NOTE: This test was ported using port_passes_tests_to_lit.py and could be cleaned up.

;; RUN: foreach %s %t wasm-opt --optimize-added-constants --low-memory-unused -S -o - | filecheck %s

(module
 ;; CHECK:      (type $0 (func))

 ;; CHECK:      (memory $0 1 1)
 (memory $0 1 1)
 ;; CHECK:      (func $load_const
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load
 ;; CHECK-NEXT:    (i32.const 110)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $load_const
  (drop (i32.load offset=100 (i32.const 10)))
 )
 ;; CHECK:      (func $store_const
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load
 ;; CHECK-NEXT:    (i32.const 110)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $store_const
  (local i32)
  (drop (i32.load offset=100 (i32.const 10)))
 )
 ;; CHECK:      (func $load_add
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load
 ;; CHECK-NEXT:    (i32.add
 ;; CHECK-NEXT:     (i32.const 1100)
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load
 ;; CHECK-NEXT:    (i32.add
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:     (i32.const 1200)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $load_add
  (local i32)
  (drop (i32.load offset=1000 (i32.add (i32.const 100) (local.get 0))))
  (drop (i32.load offset=1000 (i32.add (local.get 0) (i32.const 200))))
 )
 ;; CHECK:      (func $store_add
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (i32.store offset=110
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store offset=120
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $store_add
  (local i32)
  (i32.store offset=100 (i32.add (i32.const 10) (local.get 0)) (local.get 0))
  (i32.store offset=100 (i32.add (local.get 0) (i32.const 20)) (local.get 0))
 )
 ;; CHECK:      (func $load_sub
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load
 ;; CHECK-NEXT:    (i32.sub
 ;; CHECK-NEXT:     (i32.const 110)
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load
 ;; CHECK-NEXT:    (i32.sub
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:     (i32.const 120)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $load_sub
  (local i32)
  (drop (i32.load offset=100 (i32.sub (i32.const 10) (local.get 0))))
  (drop (i32.load offset=100 (i32.sub (local.get 0) (i32.const 20))))
 )
 ;; CHECK:      (func $store_sub
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (i32.store
 ;; CHECK-NEXT:   (i32.sub
 ;; CHECK-NEXT:    (i32.const 110)
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store
 ;; CHECK-NEXT:   (i32.sub
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:    (i32.const 120)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $store_sub
  (local i32)
  (i32.store offset=100 (i32.sub (i32.const 10) (local.get 0)) (local.get 0))
  (i32.store offset=100 (i32.sub (local.get 0) (i32.const 20)) (local.get 0))
 )
)
